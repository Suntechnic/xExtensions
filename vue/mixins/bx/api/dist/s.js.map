{"version":3,"file":"s.js","sources":["../src/api.js"],"sourcesContent":["/**\n * параметры api могут быть переданы props или в инъекции, в объекте apiParams\n * инъекция имеет приоритет\n * параметры будут скопированы в объект api:  {\n                host: '', // хост - по умолчения нет\n\t\t\t\turl: '/api/', // папка api\n                version: 'v1', // версия (может быть пустой - будет пропущена)\n                points: {\n                    add: 'subscribe/add',\n                    del: {\n                        uri: 'subscribe/del/{Id}',\n                        methods: ['GET'],\n                        parameters: {Id: '.*'}\n                    }\n                } // справочник точек api с именами\n\t\t\t}\n * apiFullUrl - полный url api: /api/v1/\n * apiPointsUrl - справочник url точек api: {add: '/api/v1/subscribe/add'} - локален для каждого компонента\n * \n * метод getPointUrl служит для получения url эндпоинта по его имени\n * вторым параметром передаются данные для замены в url\n * \n * пример роутов\n    // группа api версии 1\n    $routes->prefix('api/v1')->group(function (RoutingConfigurator $routes) {\n            $routes->any('subscribe/add', [\\Controllers\\Subscribe::class,'add']);\n        });\n */\n\nexport const MixinBxApi = {\n    inject: ['apiParams'],\n\tprops: {\n        apiHost: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n            default: ''\n\t\t},\n        apiUrl: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n            default: '/api/'\n\t\t},\n        apiVersion: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n            default: 'v1'\n\t\t},\n        apiPoints: {\n\t\t\trequired: Object,\n            required: true,\n            default: {}\n\t\t}\n\t},\n    data ()\n\t{\n\t\treturn {\n\t\t\tapi: {\n                host: '',\n\t\t\t\turl: '/api/',\n                version: 'v1',\n                points: {}\n\t\t\t}\n\t\t}\n\t},\n    created () {\n        if (this.apiParams?.host) {\n            this.api.host = this.apiParams.host;\n        } else this.api.host = this.apiHost;\n\n        if (this.apiParams?.url) {\n            this.api.url = this.apiParams.url;\n        } else this.api.url = this.apiUrl;\n\n        if (this.apiParams?.version) {\n            this.api.version = this.apiParams.version;\n        } else this.api.version = this.apiVersion;\n\n        if (this.apiParams?.points) {\n            this.api.points = this.apiParams.points;\n        } else this.api.points = this.apiPoints;\n    },\n\tcomputed: {\n        apiFullUrl () {\n            let Url = this.api.host + this.api.url;\n            if (this.api.version) {\n                Url = Url + this.api.version + '/';\n            }\n            return Url;\n        },\n        apiPointsUrl () {\n            let refPonintsUrl = {};\n            for (let name in this.api.points) {\n                let EndPoint = this.api.points[name]\n                if (typeof EndPoint != 'string' && EndPoint.uri) {\n                    EndPoint = EndPoint.uri;\n                } else {\n                    console.error('x.vue.bx.api','Invalid endpoint settings'+name, EndPoint);\n                    continue\n                }\n                refPonintsUrl[name] = this.apiFullUrl + this.api.points[name];\n            }\n            return refPonintsUrl;\n        }\n    },\n    methods: {\n        getPointUrl (name, data) {\n            let PointUrl = this.apiPointsUrl[name];\n\n            if (PointUrl) {\n                if (data && typeof data == 'object') {\n                    for (let Key in data) {\n                        let Val = data[Key];\n                        let Placer = '{'+Key+'}';\n                        PointUrl = PointUrl.replace(Placer,Val);\n                    }\n                }\n                return PointUrl;\n            } else {\n                console.error('x.vue.bx.api','Invalid endpoint: '+name, this.apiPointsUrl);\n            }\n        }\n    }\n}\n"],"names":["MixinBxApi","inject","props","apiHost","type","String","required","apiUrl","apiVersion","apiPoints","Object","data","api","host","url","version","points","created","apiParams","computed","apiFullUrl","Url","apiPointsUrl","refPonintsUrl","name","EndPoint","uri","console","error","methods","getPointUrl","PointUrl","Key","Val","Placer","replace"],"mappings":"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"}