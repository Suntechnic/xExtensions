{"version":3,"file":"s.js","sources":["../src/selector.js","../src/toggler.js","../src/phoneinput.js"],"sourcesContent":["import {Input} from 'x.vue.mixins';\nimport './selector.css';\n\nexport const Selector = {\n    inject: ['ioptions'],\n    mixins: [Input],\n    name: 'Selector',\n    props: {\n        options: {},\n        valuekey: {}, // ключ значения в объекте option списка options - если не указан - то ключ в options\n        titlekey: {}, // ключ title\n        name: {}, // имя поля\n        placeholder: {default: ''},\n\n        multiselect: {default: false},\n        view_search: {default: true},\n        view_reset: {default: true}\n    },\n    data ()\n\t{\n\t\treturn {\n\t\t\tstate: {\n                search: '',\n                open: false\n            }\n\t\t}\n\t},\n    created ()\n\t{\n\t\tthis.modelValue2valueModel();\n        console.log(this.ioptions);\n\t},\n    watch: {\n\t\tvalueModel (val,oval)\n        {\n            if (this.multiselect) {\n                this.$emit('update:modelValue', this.valueModel);\n            } else {\n                if (this.valueModel?.length == 1) {\n                    this.$emit('update:modelValue', this.valueModel[0]);\n                } else {\n                    this.$emit('update:modelValue', undefined);\n                }\n            }\n        },\n        modelValue (val,oval)\n        {\n            this.modelValue2valueModel();\n        }\n\t},\n    computed: {\n        structure () {\n            let structure = {\n                options: [],\n                map: {}\n            };\n\n            let options = this.options || this.ioptions;\n            \n            for (let i in options) {\n                let option = {\n                    value: this.valuekey?options[i][this.valuekey]:i,\n                    title: this.titlekey?options[i][this.titlekey]:options[i],\n                    //option: this.options[i]\n                }\n                option.searcheble = option.title.toLowerCase();\n                structure.map[option.value] = structure.options.length;\n                structure.options.push(option);\n            }\n            \n            return structure;\n        },\n        indexeselected () {\n            let indexeselected = [];\n            if (this.structure.map) {\n                for (let i in this.valueModel) {\n                    indexeselected.push(this.structure.map[this.valueModel[i]]);\n                }\n                //console.log(JSON.stringify(indexeselected));\n                return indexeselected;\n            }\n        },\n        optionselected () {\n            let optionselected = [];\n            if (this.structure.options?.length && typeof this.indexeselected != 'undefined') {\n                for (let i in this.indexeselected) {\n                    let index = this.indexeselected[i];\n\n                    optionselected.push(this.structure.options[index]);\n                }\n            }\n            return optionselected;\n        },\n        titles () {\n            let titles = [];\n            for (let i in this.optionselected) {\n                let option = this.optionselected[i];\n                titles.push(option.title);\n            }\n            return titles;\n        },\n        orderedOptions () {\n            let ordered = [\n                [],\n                [],\n                []\n            ];\n            \n            if (this.state.search) {\n                let search = this.state.search.toLowerCase();\n                for (let i in this.structure.options) {\n                    let option = this.structure.options[i];\n                    let pos = option.searcheble.indexOf(search)\n                    if (pos == 0) {\n                        ordered[0].push(option);\n                    } else if (pos > 0) {\n                        ordered[1].push(option);\n                    } else {\n                        ordered[2].push(option);\n                    }\n                }\n            } else {\n                ordered[0] = this.structure.options;\n            }\n            \n            return ordered;\n        }\n    },\n    methods: {\n        modelValue2valueModel () {\n            this.valueModel = this.modelValue;\n\n            if (typeof this.valueModel == 'undefined' || this.valueModel == null || !this.valueModel) {\n                this.valueModel = [];\n            } else if (typeof this.valueModel != 'object') {\n                this.valueModel = [this.valueModel];\n            }\n\n            //console.log('valueModel',this.valueModel);\n        },\n        open ()\n        {\n            this.state.open = true;\n        },\n        close ()\n        {\n            this.state.open = false;\n        },\n        toggle ()\n        {\n            this.state.open = !this.state.open;\n        },\n        set (value)\n        {\n            if (this.multiselect) {\n                for (let i in this.valueModel) {\n                    let oneVal = this.valueModel[i];\n                    if (oneVal == value) {\n                        this.valueModel.splice(i,1);\n                        return;\n                    }\n                }\n                this.valueModel.push(value);\n            } else {\n                this.valueModel = [value];\n                this.close();\n            }\n        }\n    },\n\ttemplate: `\n    <div class=\"selector\">\n        <input\n                v-if=\"name\"\n                v-bind:name=\"name\"\n                v-bind:value=\"valueModel\"\n                type=\"hidden\"\n            >\n        <div class=\"selector-display\" v-on:click=\"toggle\">{{titles.join(', ')}}</div>\n        <div class=\"selector-list\" v-if=\"state.open\">\n            <input v-if=\"view_search\" v-model=\"state.search\">\n            <span class=\"selector-unselect\" v-if=\"view_reset && option\" v-on:click=\"set('')\">Сбросить значение ❌</span>\n            <ul>\n                <li\n                        v-for=\"option in orderedOptions[0]\"\n                        v-bind:key=\"'o_'+option.value\"\n                        v-on:click=\"set(option.value)\"\n                        v-bind:class=\"{active:valueModel.includes(option.value)}\"\n                    >{{option.title}}</li>\n                <li\n                        v-for=\"option in orderedOptions[1]\"\n                        v-bind:key=\"'o_'+option.value\"\n                        v-on:click=\"set(option.value)\"\n                        v-bind:class=\"{active:valueModel.includes(option.value)}\"\n                        class=\"selector-list-item_others\"\n                    >{{option.title}}</li>\n                <li\n                        v-for=\"option in orderedOptions[2]\"\n                        v-bind:key=\"'o_'+option.value\"\n                        v-on:click=\"set(option.value)\"\n                        v-bind:class=\"{active:valueModel.includes(option.value)}\"\n                        class=\"selector-list-item_rest\"\n                    >{{option.title}}</li>\n            </ul>\n        </div>\n    </div>\n\t`\n}","import {Input} from 'x.vue.mixins';\nimport './toggler.css';\n\nexport const Toggler = {\n\tmixins: [Input],\n\tprops: {\n\t\tvalue1: {\n            type: String\n        },\n        value2: {\n            type: String\n        },\n\t\ttitle1: {\n            type: String,\n\t\t\tdefault: ''\n        },\n        title2: {\n            type: String,\n\t\t\tdefault: ''\n        },\n        name: {\n            type: String,\n\t\t\tdefault: ''\n        }\n\t},\n    data () {\n        return {\n            \n        }\n    },\n    methods: {\n        toggle (val)\n        {\n\t\t\tif (val == this.value1 || val == this.value2) {\n                this.valueModel = val;\n            } else if (this.valueModel == this.value1) {\n                this.valueModel = this.value2;\n            } else {\n                this.valueModel = this.value1;\n            }\n        }\n    },\n\ttemplate: `\n    <div \n            class=\"toggler\"\n            v-bind:class=\"{'alt_value':valueModel==value2}\"\n        >\n        <input\n                v-if=\"name\"\n                v-bind:name=\"name\"\n                v-bind:value=\"valueModel\"\n                type=\"hidden\"\n            >\n        <span class=\"toggler_label\" \n                v-bind:class=\"{'toggler_active_value':valueModel==value1}\" \n                v-on:click=\"toggle('CollectionsList')\"\n            >{{title1}}</span>\n        <div class=\"toggler_switch\" v-on:click=\"toggle\">\n            <span class=\"toggler_switch_slider\"></span>\n        </div>\n        <span class=\"toggler_label\"\n                v-bind:class=\"{'toggler_active_value':valueModel==value2}\" \n                v-on:click=\"toggle('TilesList')\"\n            >{{title2}}</span>\n    </div>\n\t`\n}\n","import {Input,InputContented} from 'x.vue.mixins';\n\nexport const PhoneInput = {\n\tmixins: [Input,InputContented],\n\tprops: {\n\t\tname: {\n            type: String,\n\t\t\tdefault: ''\n        },\n        placeholder: {\n            type: String,\n\t\t\tdefault: ''\n        },\n\t\terror: {}\n\t},\n\tcomputed: {\n\t\ttitleDisplaed ()\n\t\t{\n\t\t\treturn this.title; // this.hasContented?this.title:'+7 (901) 234-56-78';\n\t\t}\n\t},\n    methods: {\n        format (val)\n        {\n\t\t\t\n\t\t\tif (val == ''\n\t\t\t\t\t|| val == '+7 '\n\t\t\t\t\t|| val == '+7'\n\t\t\t\t\t|| val == '+'\n\t\t\t\t) return val;\n\t\t\t\n            var emit = false;\n\t\t\tval = val\n\t\t\t\t\t.replace( /\\D/g, '' ) // убираем все нечилас\n\t\t\t\t\t.slice(0,11) // обрезаем до 11 цифр\n\t\t\t\t\t.split( /(?=.)/ ); // преобразуем в массив\n\t\t\tif (val[0] != 7) val[0] = 7; // Заменяем первую цифру на 7\n\t\t\tif (val.length == 11) emit = true; // если цифр 11 поднимаем флаг эммиссии\n\t\t\t\n\t\t\t// форматирование\n\t\t\tvar i = val.length - 1;\n\t\t\tif ( 0 <= i ) val.splice( 1, 0, ' (' );\n\t\t\tif ( 4 <= i ) val.splice( 5, 0, ') ' );\n\t\t\tif ( 7 <= i ) val.splice( 9, 0, '-' );\n\t\t\tif ( 9 <= i ) val.splice( 12, 0, '-' );\n\n\t\t\t// подоготовка\n\t\t\tvar val = '+'+val.join('');\n\t\t\t\n\t\t\treturn val;\n        }\n    },\n\twatch: {\n\t\tvalueModel (val,oval)\n        {\n            if (typeof val != 'string') {\n                this.valueModel = '';\n                return;\n            }\n            \n            let formatVal = this.format(val);\n            if (val != formatVal) {\n                this.valueModel = formatVal;\n                return;\n            }\n            \n            if (this.modelValue != val) this.$emit('update:modelValue', val);\n        },\n\t},\n\ttemplate: `\n    <span>\n        <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tv-model=\"valueModel\"\n\t\t\t\tv-bind:name=\"name\"\n                v-bind:placeholder=\"placeholder\"\n\t\t\t\tref=\"input\"\n\t\t\t>\n    </span>\n\t`\n}\n"],"names":["Selector","inject","mixins","Input","name","props","options","valuekey","titlekey","placeholder","multiselect","view_search","view_reset","data","state","search","open","created","modelValue2valueModel","console","log","ioptions","watch","valueModel","val","oval","$emit","_this$valueModel","length","undefined","modelValue","computed","structure","map","i","option","value","title","searcheble","toLowerCase","push","indexeselected","optionselected","_this$structure$optio","index","titles","orderedOptions","ordered","pos","indexOf","methods","babelHelpers","close","toggle","set","oneVal","splice","template","Toggler","value1","type","String","value2","title1","title2","PhoneInput","InputContented","error","titleDisplaed","format","replace","slice","split","emit","join","formatVal"],"mappings":";;;;;;QAGaA,QAAQ,GAAG;MACpBC,MAAM,EAAE,CAAC,UAAU,CAAC;MACpBC,MAAM,EAAE,CAACC,kBAAK,CAAC;MACfC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE;QACHC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,EAAE;;QACZC,QAAQ,EAAE,EAAE;;QACZJ,IAAI,EAAE,EAAE;;QACRK,WAAW,EAAE;UAAC,WAAS;SAAG;QAE1BC,WAAW,EAAE;UAAC,WAAS;SAAM;QAC7BC,WAAW,EAAE;UAAC,WAAS;SAAK;QAC5BC,UAAU,EAAE;UAAC,WAAS;;OACzB;MACDC,IAAI,WAAAA,OACP;QACC,OAAO;UACNC,KAAK,EAAE;YACMC,MAAM,EAAE,EAAE;YACVC,IAAI,EAAE;;SAEnB;OACD;MACEC,OAAO,WAAAA,UACV;QACC,IAAI,CAACC,qBAAqB,EAAE;QACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC;OAChC;MACEC,KAAK,EAAE;QACTC,UAAU,WAAAA,WAAEC,GAAG,EAACC,IAAI,EACd;UACI,IAAI,IAAI,CAACf,WAAW,EAAE;YAClB,IAAI,CAACgB,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACH,UAAU,CAAC;WACnD,MAAM;YAAA,IAAAI,gBAAA;YACH,IAAI,EAAAA,gBAAA,OAAI,CAACJ,UAAU,cAAAI,gBAAA,uBAAfA,gBAAA,CAAiBC,MAAM,KAAI,CAAC,EAAE;cAC9B,IAAI,CAACF,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;aACtD,MAAM;cACH,IAAI,CAACG,KAAK,CAAC,mBAAmB,EAAEG,SAAS,CAAC;;;SAGrD;QACDC,UAAU,WAAAA,WAAEN,GAAG,EAACC,IAAI,EACpB;UACI,IAAI,CAACP,qBAAqB,EAAE;;OAEtC;MACEa,QAAQ,EAAE;QACNC,SAAS,WAAAA,YAAI;UACT,IAAIA,SAAS,GAAG;YACZ1B,OAAO,EAAE,EAAE;YACX2B,GAAG,EAAE;WACR;UAED,IAAI3B,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,IAAI,CAACe,QAAQ;UAE3C,KAAK,IAAIa,CAAC,IAAI5B,OAAO,EAAE;YACnB,IAAI6B,MAAM,GAAG;cACTC,KAAK,EAAE,IAAI,CAAC7B,QAAQ,GAACD,OAAO,CAAC4B,CAAC,CAAC,CAAC,IAAI,CAAC3B,QAAQ,CAAC,GAAC2B,CAAC;cAChDG,KAAK,EAAE,IAAI,CAAC7B,QAAQ,GAACF,OAAO,CAAC4B,CAAC,CAAC,CAAC,IAAI,CAAC1B,QAAQ,CAAC,GAACF,OAAO,CAAC4B,CAAC;;aAE3D;;YACDC,MAAM,CAACG,UAAU,GAAGH,MAAM,CAACE,KAAK,CAACE,WAAW,EAAE;YAC9CP,SAAS,CAACC,GAAG,CAACE,MAAM,CAACC,KAAK,CAAC,GAAGJ,SAAS,CAAC1B,OAAO,CAACsB,MAAM;YACtDI,SAAS,CAAC1B,OAAO,CAACkC,IAAI,CAACL,MAAM,CAAC;;UAGlC,OAAOH,SAAS;SACnB;QACDS,cAAc,WAAAA,iBAAI;UACd,IAAIA,cAAc,GAAG,EAAE;UACvB,IAAI,IAAI,CAACT,SAAS,CAACC,GAAG,EAAE;YACpB,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACX,UAAU,EAAE;cAC3BkB,cAAc,CAACD,IAAI,CAAC,IAAI,CAACR,SAAS,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAACW,CAAC,CAAC,CAAC,CAAC;;;YAG/D,OAAOO,cAAc;;SAE5B;QACDC,cAAc,WAAAA,iBAAI;UAAA,IAAAC,qBAAA;UACd,IAAID,cAAc,GAAG,EAAE;UACvB,IAAI,CAAAC,qBAAA,OAAI,CAACX,SAAS,CAAC1B,OAAO,cAAAqC,qBAAA,eAAtBA,qBAAA,CAAwBf,MAAM,IAAI,OAAO,IAAI,CAACa,cAAc,IAAI,WAAW,EAAE;YAC7E,KAAK,IAAIP,CAAC,IAAI,IAAI,CAACO,cAAc,EAAE;cAC/B,IAAIG,KAAK,GAAG,IAAI,CAACH,cAAc,CAACP,CAAC,CAAC;cAElCQ,cAAc,CAACF,IAAI,CAAC,IAAI,CAACR,SAAS,CAAC1B,OAAO,CAACsC,KAAK,CAAC,CAAC;;;UAG1D,OAAOF,cAAc;SACxB;QACDG,MAAM,WAAAA,SAAI;UACN,IAAIA,MAAM,GAAG,EAAE;UACf,KAAK,IAAIX,CAAC,IAAI,IAAI,CAACQ,cAAc,EAAE;YAC/B,IAAIP,MAAM,GAAG,IAAI,CAACO,cAAc,CAACR,CAAC,CAAC;YACnCW,MAAM,CAACL,IAAI,CAACL,MAAM,CAACE,KAAK,CAAC;;UAE7B,OAAOQ,MAAM;SAChB;QACDC,cAAc,WAAAA,iBAAI;UACd,IAAIC,OAAO,GAAG,CACV,EAAE,EACF,EAAE,EACF,EAAE,CACL;UAED,IAAI,IAAI,CAACjC,KAAK,CAACC,MAAM,EAAE;YACnB,IAAIA,MAAM,GAAG,IAAI,CAACD,KAAK,CAACC,MAAM,CAACwB,WAAW,EAAE;YAC5C,KAAK,IAAIL,CAAC,IAAI,IAAI,CAACF,SAAS,CAAC1B,OAAO,EAAE;cAClC,IAAI6B,MAAM,GAAG,IAAI,CAACH,SAAS,CAAC1B,OAAO,CAAC4B,CAAC,CAAC;cACtC,IAAIc,GAAG,GAAGb,MAAM,CAACG,UAAU,CAACW,OAAO,CAAClC,MAAM,CAAC;cAC3C,IAAIiC,GAAG,IAAI,CAAC,EAAE;gBACVD,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI,CAACL,MAAM,CAAC;eAC1B,MAAM,IAAIa,GAAG,GAAG,CAAC,EAAE;gBAChBD,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI,CAACL,MAAM,CAAC;eAC1B,MAAM;gBACHY,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI,CAACL,MAAM,CAAC;;;WAGlC,MAAM;YACHY,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAACf,SAAS,CAAC1B,OAAO;;UAGvC,OAAOyC,OAAO;;OAErB;MACDG,OAAO,EAAE;QACLhC,qBAAqB,WAAAA,wBAAI;UACrB,IAAI,CAACK,UAAU,GAAG,IAAI,CAACO,UAAU;UAEjC,IAAI,OAAO,IAAI,CAACP,UAAU,IAAI,WAAW,IAAI,IAAI,CAACA,UAAU,IAAI,IAAI,IAAI,CAAC,IAAI,CAACA,UAAU,EAAE;YACtF,IAAI,CAACA,UAAU,GAAG,EAAE;WACvB,MAAM,IAAI4B,YAAA,WAAO,IAAI,CAAC5B,UAAU,KAAI,QAAQ,EAAE;YAC3C,IAAI,CAACA,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU,CAAC;;;;SAI1C;QACDP,IAAI,WAAAA,OACJ;UACI,IAAI,CAACF,KAAK,CAACE,IAAI,GAAG,IAAI;SACzB;QACDoC,KAAK,WAAAA,QACL;UACI,IAAI,CAACtC,KAAK,CAACE,IAAI,GAAG,KAAK;SAC1B;QACDqC,MAAM,WAAAA,SACN;UACI,IAAI,CAACvC,KAAK,CAACE,IAAI,GAAG,CAAC,IAAI,CAACF,KAAK,CAACE,IAAI;SACrC;QACDsC,GAAG,WAAAA,IAAElB,KAAK,EACV;UACI,IAAI,IAAI,CAAC1B,WAAW,EAAE;YAClB,KAAK,IAAIwB,CAAC,IAAI,IAAI,CAACX,UAAU,EAAE;cAC3B,IAAIgC,MAAM,GAAG,IAAI,CAAChC,UAAU,CAACW,CAAC,CAAC;cAC/B,IAAIqB,MAAM,IAAInB,KAAK,EAAE;gBACjB,IAAI,CAACb,UAAU,CAACiC,MAAM,CAACtB,CAAC,EAAC,CAAC,CAAC;gBAC3B;;;YAGR,IAAI,CAACX,UAAU,CAACiB,IAAI,CAACJ,KAAK,CAAC;WAC9B,MAAM;YACH,IAAI,CAACb,UAAU,GAAG,CAACa,KAAK,CAAC;YACzB,IAAI,CAACgB,KAAK,EAAE;;;OAGvB;MACJK,QAAQ;IAqCT,CAAC;;QC3MYC,OAAO,GAAG;MACtBxD,MAAM,EAAE,CAACC,kBAAK,CAAC;MACfE,KAAK,EAAE;QACNsD,MAAM,EAAE;UACEC,IAAI,EAAEC;SACT;QACDC,MAAM,EAAE;UACJF,IAAI,EAAEC;SACT;QACPE,MAAM,EAAE;UACEH,IAAI,EAAEC,MAAM;UACrB,WAAS;SACH;QACDG,MAAM,EAAE;UACJJ,IAAI,EAAEC,MAAM;UACrB,WAAS;SACH;QACDzD,IAAI,EAAE;UACFwD,IAAI,EAAEC,MAAM;UACrB,WAAS;;OAEV;MACEhD,IAAI,WAAAA,OAAI;QACJ,OAAO,EAEN;OACJ;MACDqC,OAAO,EAAE;QACLG,MAAM,WAAAA,OAAE7B,GAAG,EACX;UACL,IAAIA,GAAG,IAAI,IAAI,CAACmC,MAAM,IAAInC,GAAG,IAAI,IAAI,CAACsC,MAAM,EAAE;YACjC,IAAI,CAACvC,UAAU,GAAGC,GAAG;WACxB,MAAM,IAAI,IAAI,CAACD,UAAU,IAAI,IAAI,CAACoC,MAAM,EAAE;YACvC,IAAI,CAACpC,UAAU,GAAG,IAAI,CAACuC,MAAM;WAChC,MAAM;YACH,IAAI,CAACvC,UAAU,GAAG,IAAI,CAACoC,MAAM;;;OAGxC;MACJF,QAAQ;IAwBT,CAAC;;QChEYQ,UAAU,GAAG;MACzB/D,MAAM,EAAE,CAACC,kBAAK,EAAC+D,2BAAc,CAAC;MAC9B7D,KAAK,EAAE;QACND,IAAI,EAAE;UACIwD,IAAI,EAAEC,MAAM;UACrB,WAAS;SACH;QACDpD,WAAW,EAAE;UACTmD,IAAI,EAAEC,MAAM;UACrB,WAAS;SACH;QACPM,KAAK,EAAE;OACP;MACDpC,QAAQ,EAAE;QACTqC,aAAa,WAAAA,gBACb;UACC,OAAO,IAAI,CAAC/B,KAAK,CAAC;;OAEnB;;MACEa,OAAO,EAAE;QACLmB,MAAM,WAAAA,OAAE7C,GAAG,EACX;UAEL,IAAIA,GAAG,IAAI,EAAE,IACRA,GAAG,IAAI,KAAK,IACZA,GAAG,IAAI,IAAI,IACXA,GAAG,IAAI,GAAG,EACZ,OAAOA,GAAG;UAGbA,GAAG,GAAGA,GAAG,CACN8C,OAAO,CAAE,KAAK,EAAE,EAAE,CAAE;WACpBC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;WACXC,KAAK,CAAE,OAAO,CAAE,CAAC;UACpB,IAAIhD,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;UAC5B,IAAIA,GAAG,CAACI,MAAM,IAAI,EAAE,EAAE6C,CAAY;;;UAGlC,IAAIvC,CAAC,GAAGV,GAAG,CAACI,MAAM,GAAG,CAAC;UACtB,IAAK,CAAC,IAAIM,CAAC,EAAGV,GAAG,CAACgC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;UACtC,IAAK,CAAC,IAAItB,CAAC,EAAGV,GAAG,CAACgC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAE;UACtC,IAAK,CAAC,IAAItB,CAAC,EAAGV,GAAG,CAACgC,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAE;UACrC,IAAK,CAAC,IAAItB,CAAC,EAAGV,GAAG,CAACgC,MAAM,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAE;;;UAGtC,IAAIhC,GAAG,GAAG,GAAG,GAACA,GAAG,CAACkD,IAAI,CAAC,EAAE,CAAC;UAE1B,OAAOlD,GAAG;;OAER;MACJF,KAAK,EAAE;QACNC,UAAU,WAAAA,WAAEC,GAAG,EAACC,IAAI,EACd;UACI,IAAI,OAAOD,GAAG,IAAI,QAAQ,EAAE;YACxB,IAAI,CAACD,UAAU,GAAG,EAAE;YACpB;;UAGJ,IAAIoD,SAAS,GAAG,IAAI,CAACN,MAAM,CAAC7C,GAAG,CAAC;UAChC,IAAIA,GAAG,IAAImD,SAAS,EAAE;YAClB,IAAI,CAACpD,UAAU,GAAGoD,SAAS;YAC3B;;UAGJ,IAAI,IAAI,CAAC7C,UAAU,IAAIN,GAAG,EAAE,IAAI,CAACE,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;;OAE1E;MACDiC,QAAQ;IAWT,CAAC;;;;;;;;;;"}